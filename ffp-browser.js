import log from './base/log.js';

import isIterable from './base/isIterable';
import isPromise from './base/isPromise';
import isArray from './base/isArray';
import isFunction from './base/isFunction';
import isString from './base/isString';
import isEmpty from './base/isEmpty';
import isUndefined from './base/isUndefined';
import isMatch from './base/isMatch';
import map from './base/map';
import filter from './base/filter';
import reduce from './base/reduce';
import go from './base/go';
import goFirst from './base/goFirst';
import pipe from './base/pipe';
import take from './base/take';
import takeFirst from './base/takeFirst';
import takeAll from './base/takeAll';
import tap from './base/tap';
import none from './base/none';
import nop from './base/nop';
import not from './base/not';
import toIter from './base/toIter';
import values from './base/values';
import match from './base/match';
import every from './base/every';
import find from './base/find';
import delay from './base/delay';
import first from './base/first';
import last from './base/last';
import call from './base/call';
import toString from './base/toString';
import join from './base/join';

import mapL from './lazy/mapL';
import filterL from './lazy/filterL';
import keysL from './lazy/keysL';
import valuesL from './lazy/valuesL';
import entriesL from './lazy/entriesL';
import flatL from './lazy/flatL';
import flatMapL from './lazy/flatMapL';
import rejectL from './lazy/rejectL';
import takeL from './lazy/takeL';

import mapC from './concurrency/mapC';
import filterC from './concurrency/filterC';
import reduceC from './concurrency/reduceC';
import takeC from './concurrency/takeC';
import takeAllC from './concurrency/takeAllC';
import catchNoop from './concurrency/catchNoop';

window.ffp = window._ = {};

_.log = log;

_.isIterable = isIterable;
_.isPromise = isPromise;
_.isArray = isArray;
_.isFunction = isFunction;
_.isString = isString;
_.isEmpty = isEmpty;
_.isUndefined = isUndefined;
_.isMatch = isMatch;
_.map = map;
_.filter = filter;
_.reduce = reduce;
_.go = go;
_.goFirst = goFirst;
_.pipe = pipe;
_.take = take;
_.takeFirst = takeFirst;
_.takeAll = takeAll;
_.tap = tap;
_.none = none;
_.nop = nop;
_.not = not;
_.toIter = toIter;
_.values = values;
_.match = match;
_.every = every;
_.find = find;
_.delay = delay;
_.first = first;
_.last = last;
_.call = call;
_.toString = toString;
_.join = join;

_.mapL = mapL;
_.filterL = filterL;
_.keysL = keysL;
_.valuesL = valuesL;
_.entriesL = entriesL;
_.flatL = flatL;
_.flatMapL = flatMapL;
_.rejectL = rejectL;
_.takeL = takeL;

_.mapC = mapC;
_.filterC = filterC;
_.reduceC = reduceC;
_.takeC = takeC;
_.takeAllC = takeAllC;
_.catchNoop = catchNoop;